(async function sendSorryMessages() {
    const inputSelector = '.x1xmf6yo > div:nth-child(1)';
    const sendButtonSelector = 'div.xjqpnuy:nth-child(3)';
    const messageText = 'Sorry';

    const repeatCount = parseInt(prompt("How many messages do you want to send?", "5"));
    if (isNaN(repeatCount) || repeatCount <= 0) {
        console.log("❌ Invalid input.");
        return;
    }

    let sentMessages = 0;

    // Helper: random delay between min and max (ms)
    function randomDelay(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }

    for (let i = 0; i < repeatCount; i++) {
        const inputBox = document.querySelector(inputSelector);
        if (!inputBox) {
            console.error("❌ Input box not found.");
            break;
        }

        inputBox.focus();

        // Simulate real typing with per-character delays
        for (let char of messageText) {
            document.execCommand('insertText', false, char);
            await new Promise(resolve => setTimeout(resolve, randomDelay(100, 250))); // slow, human typing
        }

        await new Promise(resolve => setTimeout(resolve, randomDelay(400, 800))); // wait for send button

        const sendButton = document.querySelector(sendButtonSelector);
        if (!sendButton) {
            console.error("❌ Send button not found.");
            break;
        }

        sendButton.click();
        sentMessages++;
        console.log(`✅ Sent message ${sentMessages}`);

        // Longer delay every 5 messages
        if (sentMessages % 5 === 0) {
            console.log("⏳ Taking a short break to avoid detection...");
            await new Promise(resolve => setTimeout(resolve, randomDelay(5000, 8000)));
        } else {
            // Normal delay between 2s and 5s
            await new Promise(resolve => setTimeout(resolve, randomDelay(2000, 5000)));
        }
    }

    console.log(`🎉 Done! ${sentMessages} messages sent safely.`);
})();
